{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPbaPhyhpfIJJGqYY6TtLMX",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Sean0450/-Ellip/blob/main/1Rf6gvD4oxG2TUHABv0a1fpWea7-iO85A%3Fusp%3Dsharing%23scrollTo%3D_8lkmRrZB1Mp\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "vzchiIuZ3-rs"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##**44.Эллипс**\n",
        "##Задачи:\n",
        "1.Вычислить значение полуоси эллипса с помощью метода `scipy.optimize.brentq`, если его периметр L=10, а вторая полуось равна 1, на основании формулы.\n",
        "$$\n",
        "L=4a\\int \\limits _{0}^{\\pi /2}{\\sqrt{\\strut 1-\\varepsilon^2\\cos^2\\varphi}}\\,d\\varphi = 4a E(\\varepsilon)\n",
        "$$\n",
        "2.Вычислить $E(\\varepsilon)$ c помощью метода `scipy.special.ellipe`.\n",
        "\n",
        "3.Построить график эллипса.\n",
        "\n",
        "4.Сравнить полученное значение L с тем, что можно получить с помощью формулы: $$\n",
        "L\\approx 4\\cdot{\\frac {\\pi ab+(a-b)^{2}}{a+b}}.\n",
        "$$ \n",
        "\n",
        "5.Сделать выводы о полученных значениях.\n",
        "\n",
        "Исходное уравнение длины дуги эллипса выглядит следующим образом:\n",
        "$$\n",
        "L=4a\\int \\limits _{0}^{\\pi /2}{\\sqrt{\\strut 1-\\varepsilon^2\\cos^2\\varphi}}\\,d\\varphi = 4a E(\\varepsilon)\n",
        "$$\n",
        "Так как пределы интегрирования находятся между π/2 и 0, то мы имеем полное право заменить $ \\cos^2\\varphi $ на $\\sin^2φ $.\n",
        "Полученный таким образом интеграл представляет собой ` полный эллиптический интеграл второго рода`. \n",
        "$$\n",
        "E(\\varepsilon) =\\int\\limits _{0}^{\\pi /2}{\\sqrt{\\strut 1-\\varepsilon^2\\sin^2\\varphi}}\\,d\\varphi\n",
        "$$\n",
        "Решение находится с помощью бесконечного числового ряда $\\left(\\sum\\limits_{j=1}^{∞} a_j\\right)$\n",
        "\n",
        "Займемся его вычислнием. Известно, что биномиальный ряд $(1+ x)^a$ равен:\n",
        "$$\n",
        "1 + ax + {\\frac{a(a - 1)}{2!}}x^2 + {\\frac{a(a - 1)(a -2)}{3!}}x^3 +  ...\n",
        "$$\n",
        "Подставим вместо $(1 + x)^a$ иррациональное выражение $\\sqrt{1 + x}$ (что наложит на наш ряд модуль), а также преобразуем коэффициенты к следующему виду:\n",
        "$$\n",
        "1 + \\frac{1}{2}x + \\frac{1\\cdot3}{2\\cdot4}\\cdot\\frac{x^2}{3} + \\frac{1\\cdot3\\cdot5}{2\\cdot4\\cdot6}\\cdot\\frac{x^3}{5} + ...\n",
        "$$\n",
        "Теперь заменим $x -> -x^2$, тогда:\n",
        "$$\n",
        "\\sqrt{1-x^2} = 1 - \\frac{1}{2}x^2 - \\frac{1\\cdot3}{2\\cdot4}\\cdot\\frac{x^4}{3} + \\frac{1\\cdot3\\cdot5}{2\\cdot4\\cdot6}\\cdot\\frac{x^6}{5} + ... =\n",
        "$$\n",
        "$$\n",
        "1 - \\left(\\sum\\limits_{j=1}^{∞}\\frac{(2j - 1)!!}{2j!!}\\cdot\\frac{x^{2j}}{(2j-1)}\\right)\n",
        "$$\n",
        "Заменим $x -> k\\sin\\varphi$, тогда:\n",
        "$$\n",
        "\\sqrt{1-k^2\\sin^2\\varphi} = 1 - \\left(\\sum\\limits_{j=1}^{∞}\\frac{(2j - 1)!!}{2j!!}\\cdot\\frac{k^{2j}\\cdot\\sin^{2n}\\varphi}{(2j-1)}\\right)\n",
        "$$\n",
        "С учетом всех преобразований, интеграл принимает вид:\n",
        "$$\n",
        "E(\\varepsilon) = \\int \\limits _{0}^{\\pi /2} 1 - \\left(\\sum\\limits_{j=1}^{∞}\\frac{(2j - 1)!!}{2j!!}\\cdot\\frac{k^{2j}\\cdot\\sin^{2n}\\varphi}{(2j-1)}\\right)dt\n",
        "$$\n",
        "С помощью методов `scipy.optimize.newton`, а также `scipy.special.ellipe` подсчитаем точное значение неизвестной полуоси."
      ],
      "metadata": {
        "id": "MVDqstAm6BCA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from scipy.optimize import newton\n",
        "from scipy.special import ellipe\n",
        "from matplotlib import pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "L = 10\n",
        "a = 1\n",
        "\n",
        "def eps(b): return (1 - (b/a)** 2)\n",
        "\n",
        "def eqv(b):\n",
        "    epsilon = eps(b)\n",
        "    return 4 * a * ellipe(epsilon) - L\n",
        "\n",
        "def aproxx(b):\n",
        "    return 4 * (np.pi * a * b + (a - b)**2) / (a + b) - L\n",
        "\n",
        "b = newton(eqv, 3)\n",
        "another_b = newton(aproxx, 2)\n",
        "\n",
        "print(\"True >>> \", b)\n",
        "print(\"Aprox >>>\", another_b)\n",
        "###Также по полученному значению построим график эллипса\n",
        "centerx, centery=0, 0\n",
        "t = np.linspace(0, 2*np.pi, 100)\n",
        "plt.plot( centerx+a*np.cos(t) , centery+b*np.sin(t) )\n",
        "plt.grid(color='lightgray',linestyle='--')\n",
        "ax = plt.gca()\n",
        "ax.set_aspect('equal', adjustable='box')\n",
        "plt.show()   "
      ],
      "metadata": {
        "id": "_8lkmRrZB1Mp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "outputId": "4c678d67-cb7d-4df9-ef19-0a413b369667"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "True >>>  2.0866897210507034\n",
            "Aprox >>> 2.079674176177338\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "fGqk9t9Rs7BF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Вывод:Вычисление величины неизвестной полоуси оказалось намного точнее, с помощью эллиптического интеграла, разница в значениях получилась уже во втором знаке после запятой. При этом, сложно не отметить, что вычисления с помощью приближенной формулы намного проще, однако точность страдает слишком сильно, чтобы полагаться на вторую формулу."
      ],
      "metadata": {
        "id": "X9D03jNopBGG"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "BBxT3M2I5_ga"
      }
    }
  ]
}